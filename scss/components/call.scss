@use "../core/mixins.scss" as m;

//making call black background
[class^="chat"] > [class*="minimum"] {
  background: rgba(0, 0, 0, 0.1) !important;
}

//avatar border while speaking
// - private voice call
[class*="voiceCallWrapper_"] [class*="border_"][class*="speaking_"],
// - server channel call
[class^="tileChild_"] [class*="border_"][class*="speaking_"] {
  box-shadow:
    inset 0 0 0 3px var(--accent-color),
    inset 0 0 0 4px #000;
}

//voice channel black background removed
[class^="callContainer"] {
  background: transparent !important;
}

//popout with list of people watching stream
[id^="popout"] [class^="popoutWrapper"] > [class^="scroller"] {
  background: rgba(0, 0, 0, 0.95) !important;
}

//popout with regions to select
[class^="quickSelectPopout"] {
  background: rgba(0, 0, 0, 0.95) !important;
}

//hide participants arrow button
button[class*="participantsButton"] {
  background: rgba(0, 0, 0, 0.6) !important;
  color: var(--button-text) !important;
  transition: 0.2s all ease-in-out;
  &:hover {
    background: rgba(0, 0, 0, 0.9) !important;
    color: var(--button-text-selected) !important;
  }
}

//live quality and "LIVE"
[class^="liveQualityIndicator"] {
  background: rgba(0, 0, 0, 0.95) !important;
  color: var(--button-text) !important;
}
[class^="liveIndicator"] > [class^="live"] {
  background: var(--main-color) !important;
  color: var(--button-text) !important;
}

//"this stream has ended" channel view
[class^="tileChild_"] button > [class*="button_"] {
  background: rgba(0, 0, 0, 0.95);
  color: var(--button-text);
  &:hover {
    color: var(--button-text-selected);
  }
}
//"this stream has ended" picture in picture modal
[class^="pictureInPictureVideo_"] {
  background: rgba(0, 0, 0, 0.9) !important;
}
[class^="pictureInPictureVideo_"] > span button > [class*="button_"] {
  @include m.btred;
}

//live preview backgrounds
[class^="emptyPreview_"] {
  background: rgba(0, 0, 0, 0.3) !important;
}
[class^="wanderingCubesItem_"] {
  background: var(--accent-color) !important;
}
[class^="tile_"] {
  background: rgba(0, 0, 0, 0.3) !important;
  border-radius: 10px;
}
[class^="tileChild"] > [class*="videoWrapper"],
[class^="tileChild"] > div:nth-child(2):not([class^="overlay"]) {
  background: transparent !important;
}

//invite people voice chat panel
[class*="tileSizer"] [class*="tile"] {
  background: transparent !important;

  button[class*="button"] {
    @include m.btred;
  }
}

[class^="videoControls"] {
  //center video control buttons
  [class*="contextMenuNub"],
  button[class*="centerButton"] {
    background: rgba(0, 0, 0, 0.6) !important;
    transition: 0.2s all ease-in-out;
    &:hover {
      background: rgba(0, 0, 0, 0.9) !important;
    }
    & svg {
      color: var(--button-text-selected) !important;
    }
  }
  button[class*="red"] {
    transition: 0.2s all ease-in-out;
    @include m.btred_important;
  }
  //gradients on hover removed
  & > [class^="gradient"] {
    background: transparent !important;
  }
  //remove background from top controls container
  [class*="topControls"] [class*="headerWrapper"] [class*="transparent"][class*="container"] {
    background: transparent !important;
  }
}
